name: Release

on:
  push:
    tags:
      - '*'

jobs:

  release:
    # using https://github.com/marketplace/actions/changelog-reader
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Get version from tag
        id: tag_name
        run: |
          echo "current_version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        shell: bash
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_level: warn
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.changelog_reader.outputs.version }}
          name: Release ${{ steps.changelog_reader.outputs.version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Publish for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [linux, macos]
        include:
          - name: linux
            os: ubuntu-latest
            archive_name: ${{ github.event.repository.name }}
            asset_name: ${{ github.event.repository.name }}-macos-amd64-linux-amd64
            target: x86_64-unknown-linux-musl

          - name: macos
            os: macos-latest
            archive_name: ${{ github.event.repository.name }}
            asset_name: ${{ github.event.repository.name }}-macos-amd64
            taget: aarch64-apple-darwin

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: ${{ matrix.deps }}
        if: matrix.deps != ''

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --release --locked --verbose --target ${{ matrix.target }}

      - name: Upload archive to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}-${{ steps.get_version.outputs.VERSION }}
          tag: ${{ github.ref }}
